{"id":"index.html","dependencies":[{"name":"./src\\main.js","dynamic":true,"resolved":"C:\\Users\\Abiola\\OneDrive\\Documents\\index\\src\\main.js","parent":"C:\\Users\\Abiola\\OneDrive\\Documents\\index\\index.html"},{"name":"_css_loader","parent":"C:\\Users\\Abiola\\OneDrive\\Documents\\index\\index.html","resolved":"C:\\Users\\Abiola\\OneDrive\\Documents\\index\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"},{"name":"C:\\Users\\Abiola\\OneDrive\\Documents\\index\\package.json","includedInParent":true,"mtime":1705445364148}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Interview AI</title>\r\n  <style>body {\r\n      font-family: 'Arial', sans-serif;\r\n      margin: 0;\r\n      padding: 0;\r\n      background-color: #1a1a1a;\r\n      color: #fff;\r\n    }\r\n\r\n    #mainContainer {\r\n      display: flex;\r\n      max-width: 800px;\r\n      margin: 50px auto;\r\n      background-color: #333;\r\n      box-shadow: 0 0 10px rgba(255, 223, 0, 0.1);\r\n      border-radius: 5px;\r\n      overflow: hidden;\r\n    }\r\n\r\n    #transcribeContainer,\r\n    #responseContainer {\r\n      flex: 1;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      padding: 20px;\r\n    }\r\n\r\n    #transcribeContainer {\r\n      border-right: 1px solid #555;\r\n    }\r\n\r\n    #textContainer {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    #recordButtonContainer {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    #recordSocket {\r\n      padding: 10px 20px;\r\n      font-size: 16px;\r\n      cursor: pointer;\r\n      border: none;\r\n      background-color: #4caf50;\r\n      color: #fff;\r\n      border-radius: 5px;\r\n    }\r\n\r\n    #recordSocket.recordActive {\r\n      background-color: #f44336;\r\n    }\r\n\r\n    #headerText {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    #transcribedText,\r\n    #responseText {\r\n      min-height: 100px;\r\n      border: 1px solid #555;\r\n      padding: 10px;\r\n      background-color: #1a1a1a;\r\n      overflow: auto;\r\n      flex: 1;\r\n      width: 100%;\r\n    }\r\n\r\n    .button {\r\n      padding: 10px 20px;\r\n      font-size: 16px;\r\n      cursor: pointer;\r\n      border: none;\r\n      background-color: #4285f4;\r\n      color: #fff;\r\n      border-radius: 5px;\r\n    }\r\n\r\n    .button:hover {\r\n      background-color: #357ae8;\r\n    }</style>\r\n</head>\r\n\r\n<body>\r\n  <div id=\"mainContainer\">\r\n    <div id=\"transcribeContainer\">\r\n      <div id=\"textContainer\">\r\n        <h1>Interview AI - Transcribe</h1>\r\n        <p>Real-Time implementation using AWS sockets and ChatGpt-Model4, generate quick answers for your Interview. Made by @Abiorh.</p>\r\n        <p>To run the application, click on \"Start Transcription,\" and make sure you share the screen you want to capture the audio correctly.</p>\r\n      </div>\r\n      <div id=\"recordButtonContainer\">\r\n        <button id=\"recordSocket\" class=\"recordInactive\" onclick=\"onRecordSocketPress()\">Start Transcription</button>\r\n      </div>\r\n      <div id=\"headerText\">\r\n        <h2>Transcription</h2>\r\n      </div>\r\n      <div id=\"transcribedText\"></div>\r\n      <button class=\"button\" onclick=\"stopRecording()\">Stop Transcription</button>\r\n    </div>\r\n    <div id=\"responseContainer\">\r\n      <div id=\"textContainer\">\r\n        <h1>Interview AI - Responses</h1>\r\n        <!-- Add any additional content for responses -->\r\n      </div>\r\n      <div id=\"headerText\">\r\n        <h2>Responses</h2>\r\n      </div>\r\n      <div id=\"responseText\"></div>\r\n    </div>\r\n  </div>\r\n\r\n  <script defer=\"\" type=\"text/javascript\" src=\"/1c90ff38a08209f9ebd4d05d1e43358e.js\"></script>\r\n  <script>var recordButtonSocket = document.getElementById(\"recordSocket\");\nvar transcribedText = document.getElementById(\"transcribedText\");\nvar responseText = document.getElementById(\"responseText\");\nfunction startRecording(type) {\n  window.clearTranscription();\n  try {\n    if (type === \"socket\") {\n      // Replace with your actual implementation of TranscribeSocket.startRecording\n      // TranscribeSocket.startRecording(onTranscriptionDataReceived);\n      console.log(\"Start recording...\");\n    }\n  } catch (error) {\n    alert(\"An error occurred while recording: \" + error.message);\n    stopRecording();\n  }\n}\nfunction stopRecording() {\n  // Replace with your actual implementation of TranscribeSocket.stopRecording\n  // TranscribeSocket.stopRecording();\n  console.log(\"Stop recording...\");\n  recordButtonSocket.setAttribute(\"class\", \"recordInactive\");\n}\nfunction updateTranscription(data) {\n  // Implement the updateTranscription function if not already defined\n  transcribedText.innerHTML += data;\n  transcribedText.scrollTop = transcribedText.scrollHeight;\n  sendDataToBackend(data);\n}\nfunction sendDataToBackend(data) {\n  try {\n    // Replace with your actual implementation of sending data to the backend\n    console.log(\"Sending data to backend:\", data);\n  } catch (error) {\n    console.error(\"Error sending/receiving data:\", error);\n  }\n}\nfunction onRecordSocketPress() {\n  var recordButton = document.getElementById(\"recordSocket\");\n  if (recordButton.classList.contains(\"recordActive\")) {\n    // Stop transcription\n    recordButton.textContent = \"Start Transcription\";\n    recordButton.classList.remove(\"recordActive\");\n    stopRecording();\n  } else {\n    // Start transcription\n    recordButton.textContent = \"Stop Transcription\";\n    recordButton.classList.add(\"recordActive\");\n    startRecording(\"socket\");\n  }\n}\nwindow.clearTranscription = function () {\n  transcribedText.innerHTML = \"\";\n};</script>\r\n</body>\r\n\r\n</html>\r\n"},"sourceMaps":null,"error":null,"hash":"837b7361ab74904e18f02bf9208acb84","cacheData":{"env":{}}}